vs <- ggplot(vs_data, aes(x=theta)) +
geom_line(aes(y=priorDensity, color = "prior"), size = 1) +
geom_line(aes(y=postDensity, color = "posterior"), size = 1) +
scale_color_brewer(palette = "Dark2") +
# scale_color_hue(l=) +
labs(y = "Density")
print(vs)
beta.int <- function(a){
b <- a/9
diff <- 0.05 - pbeta(0.8, shape1 = a, shape2 = b)
return(diff^2)
}
opt <- optim(par = 1, fn = beta.int, method = "Brent", lower = 0.01, upper = 100)
opt$par
opt$value
qbeta(0.5, shape1 = 14+27.78677, shape2 = 6+(27.78677/9))
beta.hdi <- function(endpts){
a <- endpts[1]
b <- endpts[2]
eqn1 <- dbeta(a, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) -
dbeta(b, shape1 = 14+27.78677, shape2 = 6+(27.78677/9))
eqn2 <- pbeta(b, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) -
pbeta(a, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) - 0.95
eqn1^2 + eqn2^2
}
constrOptim(theta = c(0.6, 1), beta.hdi, NULL,
ui = matrix(c(-1, 1, 1, 0, 0, 1), nrow = 3, ncol = 2, byrow = TRUE),
ci = c(0.001, 0, 0))
beta.hdi <- function(endpts){
a <- endpts[1]
b <- endpts[2]
eqn1 <- dbeta(a, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) -
dbeta(b, shape1 = 14+27.78677, shape2 = 6+(27.78677/9))
eqn2 <- pbeta(b, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) -
pbeta(a, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) - 0.95
eqn1^2 + eqn2^2
}
constrOptim(theta = c(0.6, 1), beta.hdi, NULL,
ui = matrix(c(-1, 1, 1, 0, 0, 1), nrow = 3, ncol = 2, byrow = TRUE),
ci = c(0.001, 0, 0))
beta.hdi <- function(endpts){
a <- endpts[1]
b <- endpts[2]
eqn1 <- dbeta(a, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) -
dbeta(b, shape1 = 14+27.78677, shape2 = 6+(27.78677/9))
eqn2 <- pbeta(b, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) -
pbeta(a, shape1 = 14+27.78677, shape2 = 6+(27.78677/9)) - 0.95
eqn1^2 + eqn2^2
}
constrOptim(theta = c(0.6, 1), beta.hdi, NULL,
ui = matrix(c(-1, 1, 1, 0, 0, 1), nrow = 3, ncol = 2, byrow = TRUE),
ci = c(0.001, 0, 0))
rm(list = ls())
library(tidyverse)
library(ggalt)
library(ggpmisc)
library(gridExtra)
d.model <- read_csv("modelData.csv")
setwd('../MA492')
getwd()
setwd('../../../social-reasoning-cogsci/Data/')
d.model <- read_csv("modelData.csv")
d.responses <- read_csv("dataOutput-tidy.csv")
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum <- ddply(data, groupnames, .fun=summary_func, varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
d.responses.summary <- data_summary(d.responses, varname="rating",
groupnames=c("game",
"firstPlayer",
"phase"))
d.all <- merge(d.model, d.responses.summary,
by = c("game", "firstPlayer", "phase"))
d.all$count <- count(d.responses, c("game", "firstPlayer", "phase"))$freq
d.all$se <- (d.all$sd * 1.96) / sqrt(d.all$count)
d.all$ci <- (d.all$sd * 1.96) / sqrt(d.all$count)
p.scatter <- ggplot(data = d.all,
aes(x = rating.x,
y = rating.y,
color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating.y, d.all$rating.x), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating.y-ci, ymax=rating.y+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter)
View(d.all)
p.scatter.rel <- ggplot(data = d.all,
aes(x = rel_model,
y = rating,
color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating.y, d.all$rating.x), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter)
p.scatter.rel <- ggplot(data = d.all,
aes(x = rel_model,
y = rating,
color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating, d.all$rel_model), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter)
rm(list = ls())
library(tidyverse)
library(ggpmisc)
library(ggalt)
library(gridExtra)
d.model <- read_csv("modelData.csv")
d.responses <- read_csv("dataOutput-tidy.csv")
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum <- ddply(data, groupnames, .fun=summary_func, varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
d.responses.summary <- data_summary(d.responses, varname="rating",
groupnames=c("game",
"firstPlayer",
"phase"))
d.all <- merge(d.model, d.responses.summary,
by = c("game", "firstPlayer", "phase"))
d.all$count <- count(d.responses, c("game", "firstPlayer", "phase"))$freq
d.all$ci <- (d.all$sd * 1.96) / sqrt(d.all$count)
p.scatter.rel <- ggplot(data = d.all,
aes(x = rel_model,
y = rating,
color = phase)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter)
print(p.scatter.rel)
p.scatter.param <- p.scatter.rel %>% d.all[, c("param_model","rating")]
d.all[, c("param_model","rating")]
p.scatter.param <- p.scatter.rel %+% d.all[, c("param_model","rating")]
print(p.scatter.param)
d.responses.summary <- data_summary(d.responses, varname="rating",
groupnames=c("game",
"firstPlayer",
"phase"))
d.all <- merge(d.model, d.responses.summary,
by = c("game", "firstPlayer", "phase"))
d.all$count <- count(d.responses, c("game", "firstPlayer", "phase"))$freq
d.all$ci <- (d.all$sd * 1.96) / sqrt(d.all$count)
p.scatter.rel <- ggplot(data = d.all,
aes(x = rel_model,
y = rating,
color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating, d.all$rel_model), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter.rel)
p.scatter.param <- p.scatter.rel %+% d.all[, c("param_model","rating")]
print(p.scatter.param)
p.scatter.param <- p.scatter.rel %+% d.all[, c("param_model","rating","ci")]
print(p.scatter.param)
p.scatter.rel <- ggplot(data = d.all,
x = rel_model,
y = rating,
aes(color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating, d.all$rel_model), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter.rel)
p.scatter.rel <- ggplot(data = d.all,
aes(x = rel_model,
y = rating,
color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating, d.all$rel_model), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter.rel)
p.scatter.param <- p.scatter.rel %+% d.all[, c("param_model","rating","ci")]
print(p.scatter.param)
rm(list = ls())
library(tidyverse)
library(ggpmisc)
library(ggalt)
library(gridExtra)
d.model <- read_csv("modelData.csv")
d.responses <- read_csv("dataOutput-tidy.csv")
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum <- ddply(data, groupnames, .fun=summary_func, varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
d.responses.summary <- data_summary(d.responses, varname="rating",
groupnames=c("game",
"firstPlayer",
"phase"))
d.all <- merge(d.model, d.responses.summary,
by = c("game", "firstPlayer", "phase"))
d.all$count <- count(d.responses, c("game", "firstPlayer", "phase"))$freq
d.all$ci <- (d.all$sd * 1.96) / sqrt(d.all$count)
p.scatter.rel <- ggplot(data = d.all,
aes(x = rel_model,
y = rating,
color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating, d.all$rel_model), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter.rel)
p.scatter.param <- p.scatter.rel %+% d.all[, c("param_model","rating","ci")]
print(p.scatter.param)
p.scatter.param <- ggplot(data = d.all,
aes(x = param_model,
y = rating,
color = phase)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
xlab("Parameter Model Predictions")
print(p.scatter.param)
p.scatter.param <- ggplot(data = d.all,
aes(x = param_model,
y = rating,
color = phase)) +
geom_text(x = 0.10, y = 95,
aes(label = paste("paste(italic(R) ==",
cor(d.all$rating, d.all$param_model), ")",
sep=" ")),
parse = TRUE,
color = "black",
size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
xlab("Parameter Model Predictions")
print(p.scatter.param)
print(p.scatter.param)
p.scatter.param <- ggplot(data = d.all,
aes(x = param_model,
y = rating,
color = phase)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Parameter Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter.param)
png(filename = "param_scatter.png"
, width = 7.5
, height = 7.5
, units = "in"
, res = 1200)
p.scatter
p.scatter.param
dev.off()
p.scatter.rel <- ggplot(data = d.all,
aes(x = rel_model,
y = rating,
color = phase)) +
# geom_text(x = 0.10, y = 95,
#           aes(label = paste("paste(italic(R) ==",
#                             cor(d.all$rating, d.all$rel_model), ")",
#                             sep=" ")),
#           parse = TRUE,
#           color = "black",
#           size = 5, hjust = 0) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-0.01,1.01),
breaks = seq(0,1,by=0.20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Relationship Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
p.scatter.param <- ggplot(data = d.all,
aes(x = param_model,
y = rating,
color = phase)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Parameter Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
png(filename = "rel_scatter.png"
, width = 7.5
, height = 7.5
, units = "in"
, res = 1200)
p.scatter.rel
dev.off()
png(filename = "param_scatter.png"
, width = 7.5
, height = 7.5
, units = "in"
, res = 1200)
p.scatter.param
dev.off()
p.scatter.param <- ggplot(data = d.all,
aes(x = param_model,
y = rating,
color = phase)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 0.02) +
geom_point(size = 3) +
scale_x_continuous(limits = c(-1,101),
breaks = seq(0,100,by=20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Parameter Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter.param)
p.scatter.param <- ggplot(data = d.all,
aes(x = param_model,
y = rating,
color = phase)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width = 2) +
geom_point(size = 3) +
scale_x_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
scale_y_continuous(limits = c(0,100),
breaks = seq(0,100,by=20)) +
theme_light() +
theme(legend.position = "bottom", strip.text.x = element_text(size = 14)) +
scale_color_brewer(palette = "Dark2",
name = "Phase",
labels = c("Judgment 1", "Judgment 2")) +
labs(x = "Parameter Model Predictions",
y = "Experiment Response Means",
color = "Judgment")
print(p.scatter.param)
png(filename = "param_scatter.png"
, width = 7.5
, height = 7.5
, units = "in"
, res = 1200)
p.scatter.param
dev.off()
